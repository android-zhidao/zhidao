package com.example.dxnima.zhidao.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.dxnima.zhidao.bean.table.GetSubject;
import com.example.dxnima.zhidao.bean.table.Msg;
import com.example.dxnima.zhidao.bean.table.Subject;
import com.example.dxnima.zhidao.bean.table.User;

import com.example.dxnima.zhidao.dao.GetSubjectDao;
import com.example.dxnima.zhidao.dao.MsgDao;
import com.example.dxnima.zhidao.dao.SubjectDao;
import com.example.dxnima.zhidao.dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig getSubjectDaoConfig;
    private final DaoConfig msgDaoConfig;
    private final DaoConfig subjectDaoConfig;
    private final DaoConfig userDaoConfig;

    private final GetSubjectDao getSubjectDao;
    private final MsgDao msgDao;
    private final SubjectDao subjectDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        getSubjectDaoConfig = daoConfigMap.get(GetSubjectDao.class).clone();
        getSubjectDaoConfig.initIdentityScope(type);

        msgDaoConfig = daoConfigMap.get(MsgDao.class).clone();
        msgDaoConfig.initIdentityScope(type);

        subjectDaoConfig = daoConfigMap.get(SubjectDao.class).clone();
        subjectDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        getSubjectDao = new GetSubjectDao(getSubjectDaoConfig, this);
        msgDao = new MsgDao(msgDaoConfig, this);
        subjectDao = new SubjectDao(subjectDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(GetSubject.class, getSubjectDao);
        registerDao(Msg.class, msgDao);
        registerDao(Subject.class, subjectDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        getSubjectDaoConfig.getIdentityScope().clear();
        msgDaoConfig.getIdentityScope().clear();
        subjectDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
    }

    public GetSubjectDao getGetSubjectDao() {
        return getSubjectDao;
    }

    public MsgDao getMsgDao() {
        return msgDao;
    }

    public SubjectDao getSubjectDao() {
        return subjectDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
